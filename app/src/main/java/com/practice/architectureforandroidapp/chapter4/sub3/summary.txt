LiveData
관찰 가능한 데이터 클래스다.
Lifecycle을 통해 생명주기를 인식한다.
데이터의 변경을 활성화된 옵저버를 통해 알린다.
주어진 LifecycleOwner의 생명 주기가 STARTED, RESUMED 상태인 경우에만 옵저버를 활성 상태로 간주한다.
: observe(LifecycleOwner, Observer) -> observer가 바라보는 lifecycleOwner의 상태를 보고 옵저버에게 알릴지 여부를 결정한다.
lifecycleOwner가 destroy면 해지 처리함
LifecycleOwner의 상태가 변경되면 이를 알려서 data 처리를 하도록 한다.

장점
1. UI와 데이터 상태의 동기화 : 생명주기에 따라 갱신 가능하므로 동기화가 유지된다.
2. 메모리 누수를 방지한다 : 알아서 destroy때 해지한다.
3. 액티비티가 갑작스럽게 종료될 때도 안전하다 : 액티비티가 갑자기 백스택에 들어가더라도 LiveData는 이벤트를 전달하지 않아 안전하다
4. 생명 주기에 대한 고민은 이제 그만한다 : UI 컴포넌트는 data만 관찰할 뿐 생명주기에 대한 data 처리에 대해서는 걱정안해도 된다.
5. 최신의 데이터를 유지한다 : 생명 주기가 활성화되는 시점에 최신 데이터를 가져온다.
6. 구성 변경에 대응한다. : configurationChange가 발생하면 즉시 최신 데이터를 받는다.
7. 자원 공유하기 : LiveData를 상속하여 싱글턴 패턴으로 사용할 수 있다. 안드로이드 시스템 서비스와 같은 곳에 단 한 번만 연결하고,
어플리케이션 내 어디에서나 다중으로 접근하여 이 서비스를 관찰할 수 있다.

LiveData 클래스
읽기만 가능한 클래스로 옵저버들의 생명 주기와 데이터 변경 여부에 따라 변경 사항이 전달된다.

MutableLiveData 클래스
LiveData를 상속하며 데이터 변경이 가능하다

MediatorLiveData 클래스
MutableLiveData를 상속하며 다른 여러 LiveData를 관찰하고 데이터의 변경에 반응한다.

LiveData 변형하기
LiveData 값을 전달하기 전에 변경하거나 다른 타입의 LiveData 인스턴스로 전달하고자 할때 사용

map(), switchMap()